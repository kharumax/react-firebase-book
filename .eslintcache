[{"/Users/harumax/WebstormProjects/react-firebase-twitter/src/index.tsx":"1","/Users/harumax/WebstormProjects/react-firebase-twitter/src/serviceWorker.ts":"2","/Users/harumax/WebstormProjects/react-firebase-twitter/src/App.tsx":"3","/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/auth/AuthTop.tsx":"4","/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/auth/Login.tsx":"5","/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/auth/SignUp.tsx":"6","/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/top/Top.tsx":"7","/Users/harumax/WebstormProjects/react-firebase-twitter/src/store/store.ts":"8","/Users/harumax/WebstormProjects/react-firebase-twitter/src/store/slices/userSlice.ts":"9","/Users/harumax/WebstormProjects/react-firebase-twitter/src/config/firebase.ts":"10","/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/LoadingPage.tsx":"11","/Users/harumax/WebstormProjects/react-firebase-twitter/src/data/entities/User.ts":"12","/Users/harumax/WebstormProjects/react-firebase-twitter/src/data/repository/userRepository.ts":"13","/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/home/Home.tsx":"14","/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/messages/Messages.tsx":"15","/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/profile/Profile.tsx":"16","/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/explore/Explore.tsx":"17"},{"size":766,"mtime":1611460684467,"results":"18","hashOfConfig":"19"},{"size":5425,"mtime":1611463347694,"results":"20","hashOfConfig":"19"},{"size":2304,"mtime":1611465652358,"results":"21","hashOfConfig":"19"},{"size":3504,"mtime":1611465407719,"results":"22","hashOfConfig":"19"},{"size":2138,"mtime":1611463473346,"results":"23","hashOfConfig":"19"},{"size":2327,"mtime":1611463473341,"results":"24","hashOfConfig":"19"},{"size":5149,"mtime":1611465789215,"results":"25","hashOfConfig":"19"},{"size":390,"mtime":1611460684468,"results":"26","hashOfConfig":"19"},{"size":1752,"mtime":1611460684468,"results":"27","hashOfConfig":"19"},{"size":933,"mtime":1611460684464,"results":"28","hashOfConfig":"19"},{"size":616,"mtime":1611460684470,"results":"29","hashOfConfig":"19"},{"size":447,"mtime":1611460684465,"results":"30","hashOfConfig":"19"},{"size":1640,"mtime":1611460684466,"results":"31","hashOfConfig":"19"},{"size":157,"mtime":1611462952138,"results":"32","hashOfConfig":"19"},{"size":168,"mtime":1611463347696,"results":"33","hashOfConfig":"19"},{"size":166,"mtime":1611462952153,"results":"34","hashOfConfig":"19"},{"size":166,"mtime":1611462952155,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"10k33js",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/harumax/WebstormProjects/react-firebase-twitter/src/index.tsx",[],["76","77"],"/Users/harumax/WebstormProjects/react-firebase-twitter/src/serviceWorker.ts",[],"/Users/harumax/WebstormProjects/react-firebase-twitter/src/App.tsx",[],"/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/auth/AuthTop.tsx",["78","79"],"/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/auth/Login.tsx",["80","81"],"import React, {useState} from 'react';\nimport styles from \"../../styles/auth/Login.module.css\";\nimport TwitterIcon from \"../../images/twitter-logo-white.png\";\nimport {auth} from \"../../config/firebase\";\nimport {loginUser} from \"../../data/repository/userRepository\";\n\n\nconst Login: React.FC = () => {\n\n    document.title = \"Twitterにログイン / Twitter\";\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n\n    const handleEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setEmail(e.target.value);\n    };\n    const handlePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setPassword(e.target.value);\n    };\n    const clearCredential = () => {\n        setEmail(\"\");\n        setPassword(\"\");\n    };\n\n    const handleLogin = async () => {\n        loginUser(email,password)\n            .then(result => {\n                console.log(`DEBUG: This is ${result}`);\n                window.location.href = \"/home\"\n            })\n            .catch(error => {\n                console.log(`Error: This is ${error}`);\n                alert(error);\n                clearCredential()\n            })\n    };\n\n    return (\n        <div className={styles.LoginContainer}>\n            <div className={styles.LoginInnerContainer}>\n                <img src={TwitterIcon}/>\n                <h2>Twitterにログイン</h2>\n                <input type=\"email\" required placeholder=\"メールアドレス\" className={styles.LoginEmailInput}\n                        value={email} onChange={handleEmail}\n                />\n                <input type=\"password\" required minLength={6} placeholder=\"パスワード\" className={styles.LoginPasswordInput}\n                        value={password} onChange={handlePassword}\n                />\n                <button type=\"submit\" className={styles.LoginConfirmButton} onClick={handleLogin}>\n                    ログイン\n                </button>\n                <a href=\"/signup\" className={styles.ToSignUpLink}>\n                    アカウント作成\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;","/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/auth/SignUp.tsx",["82"],"import React, {useState} from 'react';\nimport styles from \"../../styles/auth/SignUp.module.css\";\nimport TwitterIcon from \"../../images/twitter-logo-white.png\";\nimport {Credential, signUpUser} from \"../../data/repository/userRepository\";\n\nconst SignUp:React.FC = () => {\n\n    document.title = \"Twitterに登録 / Twitter\";\n\n    const initialCredential: Credential = {\n        fullname: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\"\n    };\n\n    const [credential,setCredential] = useState<Credential>(initialCredential);\n\n    const handleCredential = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        const newCred = { ...credential,[name]: value };\n        setCredential(newCred)\n    };\n\n    const signUp = () => {\n        console.log(`signUp is called`);\n        signUpUser(credential).then(result => {\n            window.location.href = \"/home\";\n            console.log(result)\n        })\n        .catch(error => {\n            alert(error);\n            setCredential(initialCredential);\n            console.error(`Error: ${error} at signUp in SignUp.tsx`);\n        });\n    };\n\n    return (\n        <div className={styles.SignUpContainer}>\n            <div className={styles.SignUpInnerContainer}>\n                <img src={TwitterIcon}/>\n                <h2>Twitterに登録</h2>\n                <input type=\"text\" required placeholder=\"フルネーム\" name=\"fullname\" value={credential.fullname} onChange={handleCredential}/>\n                <input type=\"text\" required placeholder=\"ユーザー名\" name=\"username\" value={credential.username} onChange={handleCredential}/>\n                <input type=\"email\" required placeholder=\"メールアドレス\" name=\"email\" value={credential.email} onChange={handleCredential}/>\n                <input type=\"password\" required minLength={6} placeholder=\"パスワード\" name=\"password\" value={credential.password} onChange={handleCredential}/>\n                <button type=\"submit\" className={styles.SignUpConfirmButton} onClick={signUp}>\n                    登録\n                </button>\n                <a href=\"/login\" className={styles.ToLoginLink}>\n                    ログインへ\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default SignUp;","/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/top/Top.tsx",["83"],"/Users/harumax/WebstormProjects/react-firebase-twitter/src/store/store.ts",[],"/Users/harumax/WebstormProjects/react-firebase-twitter/src/store/slices/userSlice.ts",["84","85"],"import { createSlice,PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\ninterface User {\n    uid: string;\n    fullname: string;\n    username: string;\n    profileImageUrl: string;\n    bio: string;\n}\n\nexport const userSlice = createSlice({\n   name: \"user\", // sliceの名称\n   initialState: {\n       // sliceの初期値\n       user: {\n           uid: \"\",\n           fullname: \"\",\n           username: \"\",\n           profileImageUrl: \"\",\n           bio: \"\",\n           isLogin: false,\n       }\n   },\n    // Stateに対して更新処理を定義する場所\n   reducers: {\n       // ここで定義した物がAction Creator関数の名前となる\n       login: (state,action) => {\n           state.user = {\n               ...state.user,uid: action.payload,isLogin: true\n           }\n       },\n       logout: (state) => {\n           state.user = {\n               uid: \"\",\n               fullname: \"\",\n               username: \"\",\n               profileImageUrl: \"\",\n               bio: \"\",\n               isLogin: false,\n           };\n       },\n       fetchCurrentUser: (state,action) => {\n           const data = action.payload;\n            state.user = {\n                ...state.user,\n                uid: data.uid,\n                fullname: data.fullname,\n                username: data.username,\n                profileImageUrl: data.profileImageUrl,\n                bio: data.bio\n            }\n       }\n   }\n});\n\nexport const { login,logout,fetchCurrentUser } = userSlice.actions;\n\nexport const selectUser = (state: RootState) => state.user.user;\n// 中間の user は storeのreducerの名称を指している\n// 最後の user は userSliceのstateであるuserを指している\n\nexport default userSlice.reducer;","/Users/harumax/WebstormProjects/react-firebase-twitter/src/config/firebase.ts",[],"/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/LoadingPage.tsx",["86"],"import React from 'react';\nimport styles from \"../styles/LoadingPage.module.css\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TwitterIcon from \"../images/twitter-logo-white.png\";\n\n\nconst LoadingPage: React.FC = () => {\n    return (\n        <div className={styles.LoadingPageContainer}>\n            <div className={styles.LoadingPageInnerContainer}>\n                <img src={TwitterIcon} className={styles.LoadingPageIcon}/>\n                <CircularProgress className={styles.LoadingPageIndicator} size={100} />\n            </div>\n        </div>\n    );\n};\n\nexport default LoadingPage;\n","/Users/harumax/WebstormProjects/react-firebase-twitter/src/data/entities/User.ts",[],"/Users/harumax/WebstormProjects/react-firebase-twitter/src/data/repository/userRepository.ts",["87","88"],"import {auth, defaultImageUrl, userRef, usersRef} from \"../../config/firebase\";\nimport {buildUser, User} from \"../entities/User\";\n\nexport interface Credential {\n    fullname: string;\n    username: string;\n    email: string;\n    password: string;\n}\n\nexport const fetchUser = async (uid: string) => {\n    console.log(`DEBUG: uid is ${uid}`);\n    const document = await usersRef.doc(uid).get();\n    if (document.exists && document.data() != undefined) {\n        return buildUser(document.data()!);\n    } else {\n        return null\n    }\n};\n\nexport const loginUser = async (email: string,password: string): Promise<string> => {\n    console.log(\"DEBUG: loginUser is called\");\n    try {\n        const authUser = await auth.signInWithEmailAndPassword(email,password);\n        return Promise.resolve(authUser.user!.uid)\n    } catch (error) {\n        return Promise.reject(error)\n    }\n};\n\nexport const signUpUser = async (credential: Credential): Promise<string> => {\n    console.log(\"DEBUG: signUpUser is called\");\n    try {\n        const authUser = await auth.createUserWithEmailAndPassword(credential.email, credential.password);\n        console.log(`DEBUG: authUser is success at userRepository`);\n        await userRef(authUser.user!.uid).set({\n            uid: authUser.user!.uid,fullname: credential.fullname,username: credential.username,\n            bio: \"\",profileImageUrl: defaultImageUrl\n        });\n        console.log(`DEBUG: setUser is success at userRepository`);\n        return Promise.resolve(authUser.user!.uid)\n    } catch (error) {\n        return Promise.reject(error)\n    }\n};\n\nexport const fetchUsers = async () => {\n\n};\n\n\n\n\n","/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/home/Home.tsx",[],"/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/messages/Messages.tsx",[],"/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/profile/Profile.tsx",[],"/Users/harumax/WebstormProjects/react-firebase-twitter/src/views/explore/Explore.tsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":34,"column":29,"nodeType":"95","endLine":34,"endColumn":95},{"ruleId":"93","severity":1,"message":"94","line":38,"column":33,"nodeType":"95","endLine":38,"endColumn":57},{"ruleId":"96","severity":1,"message":"97","line":4,"column":9,"nodeType":"98","messageId":"99","endLine":4,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":41,"column":17,"nodeType":"95","endLine":41,"endColumn":41},{"ruleId":"93","severity":1,"message":"94","line":42,"column":17,"nodeType":"95","endLine":42,"endColumn":41},{"ruleId":"100","severity":1,"message":"101","line":33,"column":7,"nodeType":"102","endLine":33,"endColumn":17,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"104","line":1,"column":22,"nodeType":"98","messageId":"99","endLine":1,"endColumn":35},{"ruleId":"96","severity":1,"message":"105","line":4,"column":11,"nodeType":"98","messageId":"99","endLine":4,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":11,"column":17,"nodeType":"95","endLine":11,"endColumn":76},{"ruleId":"96","severity":1,"message":"105","line":2,"column":20,"nodeType":"98","messageId":"99","endLine":2,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":14,"column":44,"nodeType":"108","messageId":"109","endLine":14,"endColumn":46},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'PayloadAction' is defined but never used.","'User' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [currentUser.uid, dispatch]",{"range":"115","text":"116"},[1381,1391],"[currentUser.uid, dispatch]"]